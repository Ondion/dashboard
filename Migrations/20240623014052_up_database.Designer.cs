// <auto-generated />
using System;
using FullApp.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace fullApp.Migrations
{
    [DbContext(typeof(DataBaseContext))]
    [Migration("20240623014052_up_database")]
    partial class up_database
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FullApp.Models.Pedido", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime>("DataPedido")
                        .HasColumnType("datetime2");

                    b.Property<string>("NomeCliente")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeVendedor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusPedido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalComissao")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ValorBruto")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ValorLiquido")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ID");

                    b.ToTable("Pedidos");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            DataPedido = new DateTime(2024, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NomeCliente = "Fras-le S.A.",
                            NomeVendedor = "joão",
                            StatusPedido = "fechado",
                            TotalComissao = 50.00m,
                            ValorBruto = 350.00m,
                            ValorLiquido = 300.00m
                        },
                        new
                        {
                            ID = 2,
                            DataPedido = new DateTime(2024, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NomeCliente = "Sabó Indústria e Comércio de Autopeças Ltda",
                            NomeVendedor = "pedro",
                            StatusPedido = "fechado",
                            TotalComissao = 50.00m,
                            ValorBruto = 440.00m,
                            ValorLiquido = 390.00m
                        },
                        new
                        {
                            ID = 3,
                            DataPedido = new DateTime(2024, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NomeCliente = "Iochpe-Maxion S.A.",
                            NomeVendedor = "carla",
                            StatusPedido = "aberto",
                            TotalComissao = 50.00m,
                            ValorBruto = 570.00m,
                            ValorLiquido = 520.00m
                        },
                        new
                        {
                            ID = 4,
                            DataPedido = new DateTime(2024, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NomeCliente = "Randon Implementos e Participações S.A.",
                            NomeVendedor = "marcelo",
                            StatusPedido = "aberto",
                            TotalComissao = 150.00m,
                            ValorBruto = 2400.00m,
                            ValorLiquido = 2250.00m
                        },
                        new
                        {
                            ID = 5,
                            DataPedido = new DateTime(2024, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NomeCliente = "Tupy S.A.",
                            NomeVendedor = "gabriel",
                            StatusPedido = "aberto",
                            TotalComissao = 100.00m,
                            ValorBruto = 1000.00m,
                            ValorLiquido = 900.00m
                        },
                        new
                        {
                            ID = 6,
                            DataPedido = new DateTime(2024, 6, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NomeCliente = "Mahle Metal Leve S.A.",
                            NomeVendedor = "roberto",
                            StatusPedido = "aberto",
                            TotalComissao = 140.00m,
                            ValorBruto = 1400.00m,
                            ValorLiquido = 1260.00m
                        },
                        new
                        {
                            ID = 7,
                            DataPedido = new DateTime(2024, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NomeCliente = "Magneti Marelli Cofap Fabricadora de Peças Ltda",
                            NomeVendedor = "maria",
                            StatusPedido = "fechado",
                            TotalComissao = 50.00m,
                            ValorBruto = 800.00m,
                            ValorLiquido = 750.00m
                        },
                        new
                        {
                            ID = 8,
                            DataPedido = new DateTime(2024, 4, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NomeCliente = "Bosch Sistemas Automotivos Ltda",
                            NomeVendedor = "jose",
                            StatusPedido = "fechado",
                            TotalComissao = 50.00m,
                            ValorBruto = 1100.00m,
                            ValorLiquido = 1050.00m
                        },
                        new
                        {
                            ID = 9,
                            DataPedido = new DateTime(2024, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NomeCliente = "Dana Indústrias Ltda",
                            NomeVendedor = "joana",
                            StatusPedido = "fechado",
                            TotalComissao = 50.00m,
                            ValorBruto = 900.00m,
                            ValorLiquido = 850.00m
                        },
                        new
                        {
                            ID = 10,
                            DataPedido = new DateTime(2024, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NomeCliente = "Eaton Ltda",
                            NomeVendedor = "antônio",
                            StatusPedido = "fechado",
                            TotalComissao = 50.00m,
                            ValorBruto = 600.00m,
                            ValorLiquido = 550.00m
                        },
                        new
                        {
                            ID = 11,
                            DataPedido = new DateTime(2024, 1, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NomeCliente = "Haldex do Brasil Ltda",
                            NomeVendedor = "andréa",
                            StatusPedido = "fechado",
                            TotalComissao = 50.00m,
                            ValorBruto = 500.00m,
                            ValorLiquido = 450.00m
                        },
                        new
                        {
                            ID = 12,
                            DataPedido = new DateTime(2024, 1, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            NomeCliente = "Wabco do Brasil Indústria e Comércio de Controles para Veículos Ltda",
                            NomeVendedor = "juliana",
                            StatusPedido = "fechado",
                            TotalComissao = 50.00m,
                            ValorBruto = 750.00m,
                            ValorLiquido = 700.00m
                        });
                });

            modelBuilder.Entity("FullApp.Models.PedidoProduto", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("PedidoID")
                        .HasColumnType("int");

                    b.Property<int>("ProdutoID")
                        .HasColumnType("int");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorUnitario")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ID");

                    b.HasIndex("PedidoID");

                    b.HasIndex("ProdutoID");

                    b.ToTable("PedidoProdutos");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            PedidoID = 1,
                            ProdutoID = 1,
                            Quantidade = 2,
                            ValorUnitario = 100.00m
                        },
                        new
                        {
                            ID = 2,
                            PedidoID = 1,
                            ProdutoID = 2,
                            Quantidade = 1,
                            ValorUnitario = 150.00m
                        },
                        new
                        {
                            ID = 3,
                            PedidoID = 2,
                            ProdutoID = 1,
                            Quantidade = 1,
                            ValorUnitario = 100.00m
                        },
                        new
                        {
                            ID = 4,
                            PedidoID = 2,
                            ProdutoID = 2,
                            Quantidade = 2,
                            ValorUnitario = 150.00m
                        },
                        new
                        {
                            ID = 5,
                            PedidoID = 2,
                            ProdutoID = 3,
                            Quantidade = 2,
                            ValorUnitario = 20.00m
                        },
                        new
                        {
                            ID = 6,
                            PedidoID = 3,
                            ProdutoID = 4,
                            Quantidade = 2,
                            ValorUnitario = 25.00m
                        },
                        new
                        {
                            ID = 7,
                            PedidoID = 3,
                            ProdutoID = 5,
                            Quantidade = 2,
                            ValorUnitario = 10.00m
                        },
                        new
                        {
                            ID = 8,
                            PedidoID = 3,
                            ProdutoID = 6,
                            Quantidade = 2,
                            ValorUnitario = 250.00m
                        },
                        new
                        {
                            ID = 9,
                            PedidoID = 4,
                            ProdutoID = 7,
                            Quantidade = 2,
                            ValorUnitario = 400.00m
                        },
                        new
                        {
                            ID = 10,
                            PedidoID = 4,
                            ProdutoID = 8,
                            Quantidade = 2,
                            ValorUnitario = 800.00m
                        },
                        new
                        {
                            ID = 11,
                            PedidoID = 5,
                            ProdutoID = 9,
                            Quantidade = 2,
                            ValorUnitario = 500.00m
                        },
                        new
                        {
                            ID = 12,
                            PedidoID = 6,
                            ProdutoID = 10,
                            Quantidade = 2,
                            ValorUnitario = 700.00m
                        },
                        new
                        {
                            ID = 13,
                            PedidoID = 7,
                            ProdutoID = 11,
                            Quantidade = 4,
                            ValorUnitario = 10.00m
                        },
                        new
                        {
                            ID = 14,
                            PedidoID = 7,
                            ProdutoID = 12,
                            Quantidade = 2,
                            ValorUnitario = 150.00m
                        },
                        new
                        {
                            ID = 15,
                            PedidoID = 8,
                            ProdutoID = 13,
                            Quantidade = 2,
                            ValorUnitario = 30.00m
                        },
                        new
                        {
                            ID = 16,
                            PedidoID = 8,
                            ProdutoID = 14,
                            Quantidade = 2,
                            ValorUnitario = 40.00m
                        },
                        new
                        {
                            ID = 17,
                            PedidoID = 9,
                            ProdutoID = 15,
                            Quantidade = 1,
                            ValorUnitario = 200.00m
                        },
                        new
                        {
                            ID = 18,
                            PedidoID = 9,
                            ProdutoID = 16,
                            Quantidade = 2,
                            ValorUnitario = 300.00m
                        },
                        new
                        {
                            ID = 19,
                            PedidoID = 10,
                            ProdutoID = 17,
                            Quantidade = 2,
                            ValorUnitario = 50.00m
                        },
                        new
                        {
                            ID = 20,
                            PedidoID = 10,
                            ProdutoID = 18,
                            Quantidade = 1,
                            ValorUnitario = 250.00m
                        },
                        new
                        {
                            ID = 21,
                            PedidoID = 11,
                            ProdutoID = 19,
                            Quantidade = 2,
                            ValorUnitario = 120.00m
                        },
                        new
                        {
                            ID = 22,
                            PedidoID = 11,
                            ProdutoID = 20,
                            Quantidade = 1,
                            ValorUnitario = 600.00m
                        },
                        new
                        {
                            ID = 23,
                            PedidoID = 12,
                            ProdutoID = 1,
                            Quantidade = 2,
                            ValorUnitario = 100.00m
                        },
                        new
                        {
                            ID = 24,
                            PedidoID = 12,
                            ProdutoID = 2,
                            Quantidade = 1,
                            ValorUnitario = 150.00m
                        });
                });

            modelBuilder.Entity("FullApp.Models.Produto", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("NomeProduto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StatusProduto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ValorUnitario")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ID");

                    b.ToTable("Produtos");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            NomeProduto = "tirante da tampa de bagagem",
                            StatusProduto = "Disponível",
                            ValorUnitario = 100.00m
                        },
                        new
                        {
                            ID = 2,
                            NomeProduto = "batente da fechadura do estepe",
                            StatusProduto = "Disponível",
                            ValorUnitario = 150.00m
                        },
                        new
                        {
                            ID = 3,
                            NomeProduto = "botão do porta-malas do porta-malas",
                            StatusProduto = "Disponível",
                            ValorUnitario = 20.00m
                        },
                        new
                        {
                            ID = 4,
                            NomeProduto = "kit de capa p/ pedal",
                            StatusProduto = "Disponível",
                            ValorUnitario = 25.00m
                        },
                        new
                        {
                            ID = 5,
                            NomeProduto = "capa do telecomando c/ 2 botões",
                            StatusProduto = "Disponível",
                            ValorUnitario = 10.00m
                        },
                        new
                        {
                            ID = 6,
                            NomeProduto = "cilindro da porta - c/chave",
                            StatusProduto = "Disponível",
                            ValorUnitario = 250.00m
                        },
                        new
                        {
                            ID = 7,
                            NomeProduto = "bateria automotiva",
                            StatusProduto = "Disponível",
                            ValorUnitario = 400.00m
                        },
                        new
                        {
                            ID = 8,
                            NomeProduto = "bomba de combustível",
                            StatusProduto = "Disponível",
                            ValorUnitario = 800.00m
                        },
                        new
                        {
                            ID = 9,
                            NomeProduto = "pneu radial",
                            StatusProduto = "Disponível",
                            ValorUnitario = 500.00m
                        },
                        new
                        {
                            ID = 10,
                            NomeProduto = "radiador",
                            StatusProduto = "Disponível",
                            ValorUnitario = 700.00m
                        },
                        new
                        {
                            ID = 11,
                            NomeProduto = "parafuso de roda",
                            StatusProduto = "Disponível",
                            ValorUnitario = 10.00m
                        },
                        new
                        {
                            ID = 12,
                            NomeProduto = "astilha de freio",
                            StatusProduto = "Disponível",
                            ValorUnitario = 150.00m
                        },
                        new
                        {
                            ID = 13,
                            NomeProduto = "Filtro de Óleo",
                            StatusProduto = "Disponível",
                            ValorUnitario = 30.00m
                        },
                        new
                        {
                            ID = 14,
                            NomeProduto = "Velas de Ignição",
                            StatusProduto = "Disponível",
                            ValorUnitario = 40.00m
                        },
                        new
                        {
                            ID = 15,
                            NomeProduto = "Correia Dentada",
                            StatusProduto = "Disponível",
                            ValorUnitario = 200.00m
                        },
                        new
                        {
                            ID = 16,
                            NomeProduto = "Amortecedor",
                            StatusProduto = "Disponível",
                            ValorUnitario = 300.00m
                        },
                        new
                        {
                            ID = 17,
                            NomeProduto = "Filtro de Combustível",
                            StatusProduto = "Disponível",
                            ValorUnitario = 50.00m
                        },
                        new
                        {
                            ID = 18,
                            NomeProduto = "Farol",
                            StatusProduto = "Disponível",
                            ValorUnitario = 250.00m
                        },
                        new
                        {
                            ID = 19,
                            NomeProduto = "Retrovisor",
                            StatusProduto = "Disponível",
                            ValorUnitario = 120.00m
                        },
                        new
                        {
                            ID = 20,
                            NomeProduto = "Volante",
                            StatusProduto = "Disponível",
                            ValorUnitario = 600.00m
                        });
                });

            modelBuilder.Entity("FullApp.Models.PedidoProduto", b =>
                {
                    b.HasOne("FullApp.Models.Pedido", "Pedido")
                        .WithMany("PedidoProduto")
                        .HasForeignKey("PedidoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FullApp.Models.Produto", "Produto")
                        .WithMany("PedidoProduto")
                        .HasForeignKey("ProdutoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pedido");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("FullApp.Models.Pedido", b =>
                {
                    b.Navigation("PedidoProduto");
                });

            modelBuilder.Entity("FullApp.Models.Produto", b =>
                {
                    b.Navigation("PedidoProduto");
                });
#pragma warning restore 612, 618
        }
    }
}
